trigger:
- master

pool:
  name: Default

variables:
  azureSubscription: 'AzureConnection-Project2'
  webAppName: 'azure-keyvault-app'
  nodeVersion: '18.x'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '$(nodeVersion)'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build --if-present
  displayName: 'Install dependencies'

- script: |
    cd $(System.DefaultWorkingDirectory)
    zip -r ../app.zip . -x '*.git*' 'node_modules/*' '*.DS_Store*'
    mv ../app.zip $(Build.ArtifactStagingDirectory)/app.zip
    ls -la $(Build.ArtifactStagingDirectory)
  displayName: 'Create deployment package'

<<<<<<< HEAD
  # âœ… Archive including node_modules and relevant files
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(webAppName).zip'
      replaceExistingArchive: true
      includePatterns: |
        **/*
    displayName: 'Archive Files (Including node_modules)'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(webAppName).zip'
      ArtifactName: 'drop'
    displayName: 'Publish Artifact'

  - task: AzureWebApp@1
    inputs:
      azureSubscription: '$(azureSubscription)'
      appType: 'webApp'
      appName: '$(webAppName)'
      package: '$(Pipeline.Workspace)/drop/$(webAppName).zip'
    displayName: 'Deploy to Azure Web App'
=======
- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'webAppLinux'
    appName: '$(webAppName)'
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
    runtimeStack: 'NODE|18-lts'
  displayName: 'Deploy to Azure Web App'
>>>>>>> 7040cc97661d3c8d14b4bf1c3e40740aeece8aef
